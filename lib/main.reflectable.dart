// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.
// @dart = 2.12

import 'dart:core';
import 'package:dndman_app/dnd/dnd_character.dart' as prefix1;
import 'package:dndman_app/form_generator/annotations/icon.dart' as prefix2;
import 'package:dndman_app/form_generator/annotations/options.dart' as prefix5;
import 'package:dndman_app/form_generator/annotations/reflector.dart'
    as prefix0;
import 'package:flutter/src/material/icons.dart' as prefix4;
import 'package:flutter/src/widgets/icon.dart' as prefix3;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.ClassReflector(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'DNDCharacter',
            r'.DNDCharacter',
            7,
            0,
            const prefix0.ClassReflector(),
            const <int>[0, 1, 2, 3, 4, 12],
            const <int>[13, 14, 15, 16, 17, 7, 8, 9, 10, 11],
            const <int>[],
            -1,
            {},
            {},
            {
              r'': (bool b) => (
                      {classz = const prefix1.TestClass(),
                      val = prefix1.SomeEnum.enum1,
                      playerName = "Enter Player Name",
                      characterName = "Enter Character Name",
                      someOption = false}) =>
                  b
                      ? prefix1.DNDCharacter(
                          characterName: characterName,
                          classz: classz,
                          playerName: playerName,
                          someOption: someOption,
                          val: val)
                      : null
            },
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.reflector],
            null),
        r.NonGenericClassMirrorImpl(
            r'TestClass',
            r'.TestClass',
            7,
            1,
            const prefix0.ClassReflector(),
            const <int>[5, 6, 20],
            const <int>[13, 14, 15, 16, 17, 18, 19],
            const <int>[],
            -1,
            {},
            {},
            {
              r'': (bool b) => ({test = "", test2 = false}) =>
                  b ? prefix1.TestClass(test: test, test2: test2) : null
            },
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.reflector],
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(r'playerName', 33797, 0,
            const prefix0.ClassReflector(), -1, -1, -1, null, const []),
        r.VariableMirrorImpl(r'characterName', 33797, 0,
            const prefix0.ClassReflector(), -1, -1, -1, null, const []),
        r.VariableMirrorImpl(r'classz', 33797, 0,
            const prefix0.ClassReflector(), 1, -1, -1, null, const []),
        r.VariableMirrorImpl(r'someOption', 33797, 0,
            const prefix0.ClassReflector(), -1, -1, -1, null, const <Object>[
          const prefix2.FormBoolSecondary(const prefix3.Icon(prefix4.Icons.abc))
        ]),
        r.VariableMirrorImpl(r'val', 33797, 0, const prefix0.ClassReflector(),
            -1, -1, -1, null, const <Object>[
          const prefix5.FormEnumOptions(prefix1.SomeEnum.values)
        ]),
        r.VariableMirrorImpl(r'test', 33797, 1, const prefix0.ClassReflector(),
            -1, -1, -1, null, const []),
        r.VariableMirrorImpl(r'test2', 33797, 1, const prefix0.ClassReflector(),
            -1, -1, -1, null, const []),
        r.ImplicitGetterMirrorImpl(const prefix0.ClassReflector(), 0, 7),
        r.ImplicitGetterMirrorImpl(const prefix0.ClassReflector(), 1, 8),
        r.ImplicitGetterMirrorImpl(const prefix0.ClassReflector(), 2, 9),
        r.ImplicitGetterMirrorImpl(const prefix0.ClassReflector(), 3, 10),
        r.ImplicitGetterMirrorImpl(const prefix0.ClassReflector(), 4, 11),
        r.MethodMirrorImpl(
            r'',
            128,
            0,
            -1,
            -1,
            -1,
            null,
            const <int>[0, 1, 2, 3, 4],
            const prefix0.ClassReflector(),
            const []),
        r.MethodMirrorImpl(r'==', 131074, -1, -1, -1, -1, null, const <int>[5],
            const prefix0.ClassReflector(), const []),
        r.MethodMirrorImpl(r'toString', 131074, -1, -1, -1, -1, null,
            const <int>[], const prefix0.ClassReflector(), const []),
        r.MethodMirrorImpl(r'noSuchMethod', 65538, -1, -1, -1, -1, null,
            const <int>[6], const prefix0.ClassReflector(), const []),
        r.MethodMirrorImpl(r'hashCode', 131075, -1, -1, -1, -1, null,
            const <int>[], const prefix0.ClassReflector(), const []),
        r.MethodMirrorImpl(r'runtimeType', 131075, -1, -1, -1, -1, null,
            const <int>[], const prefix0.ClassReflector(), const []),
        r.ImplicitGetterMirrorImpl(const prefix0.ClassReflector(), 5, 18),
        r.ImplicitGetterMirrorImpl(const prefix0.ClassReflector(), 6, 19),
        r.MethodMirrorImpl(r'', 128, 1, -1, -1, -1, null, const <int>[7, 8],
            const prefix0.ClassReflector(), const [])
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(
            r'classz',
            48134,
            12,
            const prefix0.ClassReflector(),
            1,
            -1,
            -1,
            null,
            const [],
            const prefix1.TestClass(),
            #classz),
        r.ParameterMirrorImpl(r'val', 48134, 12, const prefix0.ClassReflector(),
            -1, -1, -1, null, const [], prefix1.SomeEnum.enum1, #val),
        r.ParameterMirrorImpl(
            r'playerName',
            48134,
            12,
            const prefix0.ClassReflector(),
            -1,
            -1,
            -1,
            null,
            const [],
            "Enter Player Name",
            #playerName),
        r.ParameterMirrorImpl(
            r'characterName',
            48134,
            12,
            const prefix0.ClassReflector(),
            -1,
            -1,
            -1,
            null,
            const [],
            "Enter Character Name",
            #characterName),
        r.ParameterMirrorImpl(
            r'someOption',
            48134,
            12,
            const prefix0.ClassReflector(),
            -1,
            -1,
            -1,
            null,
            const [],
            false,
            #someOption),
        r.ParameterMirrorImpl(
            r'other',
            32774,
            13,
            const prefix0.ClassReflector(),
            -1,
            -1,
            -1,
            null,
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'invocation',
            32774,
            15,
            const prefix0.ClassReflector(),
            -1,
            -1,
            -1,
            null,
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'test',
            48134,
            20,
            const prefix0.ClassReflector(),
            -1,
            -1,
            -1,
            null,
            const [],
            "",
            #test),
        r.ParameterMirrorImpl(
            r'test2',
            48134,
            20,
            const prefix0.ClassReflector(),
            -1,
            -1,
            -1,
            null,
            const [],
            false,
            #test2)
      ],
      <Type>[prefix1.DNDCharacter, prefix1.TestClass],
      2,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'playerName': (dynamic instance) => instance.playerName,
        r'characterName': (dynamic instance) => instance.characterName,
        r'classz': (dynamic instance) => instance.classz,
        r'someOption': (dynamic instance) => instance.someOption,
        r'val': (dynamic instance) => instance.val,
        r'test': (dynamic instance) => instance.test,
        r'test2': (dynamic instance) => instance.test2
      },
      {},
      null,
      [])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
